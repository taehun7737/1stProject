DROP TABLE MEMBER CASCADE CONSTRAINTS;
DROP TABLE ADMIN CASCADE CONSTRAINTS;
DROP SEQUENCE PRODUCT_SEQ;
DROP TABLE PRODUCT CASCADE CONSTRAINTS;
DROP SEQUENCE ORDERS_SEQ;
DROP TABLE ORDERS CASCADE CONSTRAINTS;
DROP SEQUENCE REVIEW_BOARD_SEQ;
DROP TABLE REVIEW_BOARD;
DROP SEQUENCE QNA_BOARD_SEQ;
DROP TABLE QNA_BOARD;

CREATE TABLE MEMBER(
    mID VARCHAR2(50) PRIMARY KEY,
    mPW VARCHAR2(50) NOT NULL,
    mNAME VARCHAR2(50) NOT NULL,
    mEMAIL VARCHAR2(50),
    mBIRTH DATE,
    mADDRESS VARCHAR2(255),
    mPHONE VARCHAR2(50),
    mRDATE DATE
);
CREATE TABLE ADMIN(
    aID VARCHAR2(50) PRIMARY KEY,
    aPW VARCHAR2(50) NOT NULL,
    aNAME VARCHAR2(50) NOT NULL
);
CREATE SEQUENCE PRODUCT_SEQ MAXVALUE 999999 NOCACHE NOCYCLE;
CREATE TABLE PRODUCT(
    pNO NUMBER(6) PRIMARY KEY,
    pNAME VARCHAR2(50) NOT NULL,
    pFILENAME VARCHAR2(100) NOT NULL,
    pDETAIL VARCHAR2(50),
    pPRICE NUMBER(9) NOT NULL
);
CREATE SEQUENCE ORDERS_SEQ MAXVALUE 999999 NOCACHE NOCYCLE;
CREATE TABLE ORDERS(
    oNO VARCHAR2(50) PRIMARY KEY,
    mID VARCHAR2(50) REFERENCES MEMBER(MID),
    pNO NUMBER(6) REFERENCES PRODUCT(PNO),
    oADDRESS VARCHAR2(255) NOT NULL,
    oRDATE DATE DEFAULT SYSDATE,
    oQTY NUMBER(6) NOT NULL,
    oPHONE VARCHAR2(50)
);
CREATE SEQUENCE REVIEW_BOARD_SEQ MAXVALUE 999999 NOCACHE NOCYCLE;
CREATE TABLE REVIEW_BOARD(
    eNO NUMBER(6) PRIMARY KEY,
    mID VARCHAR2(50) REFERENCES MEMBER(MID),
    eHEAD VARCHAR2(100) NOT NULL,
    eCONTENT VARCHAR2(300) NOT NULL,
    eRDATE DATE DEFAULT SYSDATE,
    eIP VARCHAR2(100)
);
CREATE SEQUENCE QNA_BOARD_SEQ MAXVALUE 999999 NOCACHE NOCYCLE;
CREATE TABLE QNA_BOARD(
    bNO NUMBER(6) PRIMARY KEY,
    mID VARCHAR2(50) REFERENCES MEMBER(MID),
    aID REFERENCES ADMIN(AID),
    bHEAD VARCHAR2(100) NOT NULL,
    bCONTENT VARCHAR2(300) NOT NULL,
    bRDATE DATE DEFAULT SYSDATE,
    bHIT     NUMBER(4) DEFAULT 0,
    bGROUP   NUMBER(4) NOT NULL,
    bSTEP    NUMBER(4) NOT NULL,
    bINDENT  NUMBER(4) NOT NULL,
    bIP VARCHAR2(100)
);
----------------------------
--------MEMBER TABLE--------
----------------------------
-- ID 중복체크
SELECT * FROM MEMBER WHERE mID='aaa';
-- 회원가입
INSERT INTO MEMBER (mID, mPW, mNAME, mEMAIL, mBIRTH, mADDRESS, mPHONE)
    VALUES ('aaa','111','홍길동','hong@naver.com','1990/12/12','종로','010-9999-9999');
INSERT INTO MEMBER (mID, mPW, mNAME, mEMAIL, mBIRTH, mADDRESS, mPHONE)
    VALUES ('bbb','111','홍길동','hong@naver.com','1990/12/12','종로','010-9999-9999');
-- 로그인 ID PW
SELECT * FROM MEMBER WHERE mID='aaa' and mPW='111';
-- 세션에 넣기 위해 mId로 member dto가져오기
SELECT * FROM MEMBER WHERE mID='aaa';
-- 정보수정
UPDATE MEMBER SET mPw = '111',
                  mName = 'HONG',
                  mEmail = 'yi@naver.com',
                  mBirth = '1991/12/12',
                  mAddress = '서울',
                  mPHONE = '010-8888-8888'
            WHERE mId='aaa';
-- 회원정보리스트
SELECT * FROM (SELECT ROWNUM RN, A.* FROM 
                        (SELECT * FROM MEMBER ORDER BY mRDATE DESC) A)
        WHERE RN BETWEEN 1 AND 10;
-- 가입한 전체 회원 명수
SELECT COUNT(*) cnt FROM MVC_MEMBER;
-- 회원탈퇴
DELETE FROM MEMBER WHERE mID='aaa';
SELECT * FROM MEMBER;
COMMIT;
----------------------------
---------ADMIN TABLE--------
----------------------------
-- dummy data
INSERT INTO ADMIN VALUES ('admin','111','김관리');
-- DAO에 넣을 sql
-- admin loginCheck
SELECT * FROM ADMIN WHERE AID='admin' AND APW='111';
-- admin aid로 dto 가져오기
SELECT * FROM ADMIN WHERE AID='admin';
SELECT * FROM ADMIN;

----------------------------
-------ORDERS TABLE--------- @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ 수정해야함
----------------------------
SELECT * FROM ORDERS;
-- 주문 정보 LIST
SELECT * FROM (SELECT ROWNUM RN, A.* FROM(SELECT O.*, pPrice,pName FROM ORDERS O, PRODUCT P WHERE P.PNO=O.PNO ORDER BY ONO DESC) A)
    WHERE RN BETWEEN 1 AND 10;

-- 주문 상품 개수
SELECT COUNT(*) FROM ORDERS WHERE mID='aaa';

-- 주문 정보 VIEW // ONO로 DTO가져오기
SELECT O.*, pPrice FROM ORDERS O, PRODUCT P WHERE P.PNO=O.PNO AND ONO=1;

-- 주문 정보 입력
INSERT INTO ORDERS(ONO, MID, PNO, OADDRESS, OQTY, OPHONE)
				VALUES (ORDERS_SEQ.NEXTVAL, 'aaa', 2, '종로구', 2, '010-9999-9999');
-- 주문 상품 상세보기
SELECT * FROM ORDERS WHERE ONO=5;
select * from orders;
commit;
----------------------------
--------PRODUCT TABLE-------
----------------------------
-- 상품 리스트
SELECT * FROM PRODUCT;

SELECT * FROM (SELECT ROWNUM RN, A.* FROM(SELECT * FROM PRODUCT ORDER BY PNO DESC) A)
    WHERE RN BETWEEN 1 AND 10;
-- 상품 상세보기
SELECT * FROM PRODUCT WHERE PNO=2;
-- 상품 등록
INSERT INTO PRODUCT (PNO, PNAME, PFILENAME, PPRICE,PDETAIL) VALUES(PRODUCT_SEQ.NEXTVAL, '상품 이름', '파일이름', 10000, '상품 설명');
INSERT INTO PRODUCT (PNO, PNAME, PFILENAME, PPRICE, PDETAIL) VALUES(PRODUCT_SEQ.NEXTVAL, '상품 이름1', '파일이름1', 10000, '상품 설명1');
INSERT INTO PRODUCT (PNO, PNAME, PFILENAME, PPRICE, PDETAIL) VALUES(PRODUCT_SEQ.NEXTVAL, '상품 이름2', '파일이름2', 10000, '상품 설명2');
INSERT INTO PRODUCT (PNO, PNAME, PFILENAME, PPRICE, PDETAIL) VALUES(PRODUCT_SEQ.NEXTVAL, '상품 이름3', '파일이름3', 10000, '상품 설명3');
-- 상품 수정
UPDATE PRODUCT SET PNAME = '그냥닭',
                   PFILENAME = '이미지',
                   PPRICE = '9000',
                   PDETAIL = '닭가슴살'
             WHERE PNO=4;
-- 상품 삭제
DELETE FROM PRODUCT WHERE PNO=2;
-- 상품 조회
SELECT PNO, PNAME, PFILENAME, PDETAIL, PPRICE FROM PRODUCT ORDER BY PNO DESC;
--  pNo로 dto 가져오기
SELECT * FROM PRODUCT WHERE PNO=2;
--  상품 개수
SELECT COUNT(*) FROM PRODUCT;
----------------------------
-----REVIEW_BOARD TABLE-----
----------------------------
-- 후기 글쓰기
SELECT * FROM REVIEW_BOARD;
INSERT INTO REVIEW_BOARD(ENO, MID, EHEAD, ECONTENT, EIP)
				VALUES (REVIEW_BOARD_SEQ.NEXTVAL, 'bbb', '제목', '내용', '192.168.20.1');
-- 후기글 상세보기
SELECT * FROM REVIEW_BOARD WHERE ENO=1;
SELECT F.*, MNAME FROM REVIEW_BOARD F, MEMBER M WHERE M.MID=F.MID AND ENO=1;
-- 후기 글수정
UPDATE REVIEW_BOARD SET EHEAD = '제목',
                        ECONTENT = '내용'
                  WHERE ENO=18;
-- 후기 글삭제
DELETE FROM REVIEW_BOARD WHERE ENO=17;
-- 후기 글목록
SELECT * FROM (SELECT ROWNUM RN, A.* FROM(SELECT R.*, MNAME FROM REVIEW_BOARD R, MEMBER M WHERE M.MID=R.MID ORDER BY ENO DESC) A)
    WHERE RN BETWEEN 1 AND 10;
-- 글개수
SELECT COUNT(*) FROM REVIEW_BOARD;
--  eNo로 dto 가져오기
SELECT F.*, MNAME FROM REVIEW_BOARD F, MEMBER M WHERE M.MID=F.MID AND eNo=1;

----------------------------
-------QNA_BOARD TABLE------
----------------------------
-- QNA 글쓰기
INSERT INTO QNA_BOARD(BNO, MID, BHEAD, BCONTENT, BGROUP, BSTEP, BINDENT, BIP)
				VALUES (QNA_BOARD_SEQ.NEXTVAL, 'aaa', 'QNA제목', 'QNA내용', QNA_BOARD_SEQ.CURRVAL, 0, 0, '192.0.0.1');
-- QNA 글수정
UPDATE QNA_BOARD SET BHEAD = '제목',
                     BCONTENT = '내용',
                     BIP = '192.168.0.1'
               WHERE BNO=1;
-- QNA 글삭제
DELETE FROM QNA_BOARD WHERE BNO=1;

-- QNA 글상세보기
SELECT Q.*, MNAME FROM QNA_BOARD Q, MEMBER M WHERE M.MID=Q.MID AND BNO=1;

-- QNA 글목록
SELECT * FROM (SELECT ROWNUM RN, A.* FROM(SELECT BNO, (SELECT MNAME FROM QNA_BOARD Q, MEMBER M WHERE Q.MID=M.MID AND QNA_BOARD.BNO=BNO) ||
          (SELECT ANAME FROM QNA_BOARD Q, ADMIN A WHERE Q.AID=A.AID AND QNA_BOARD.BNO=BNO) writer,
            BHEAD, BCONTENT, BRDATE, BHIT, BGROUP, BSTEP, BINDENT, BIP FROM QNA_BOARD ORDER BY BGROUP DESC, BSTEP) A)
    WHERE RN BETWEEN 1 AND 10;

-- QNA 글개수
SELECT COUNT(*) FROM QNA_BOARD;

-- dto에서 bno가져오기
SELECT Q.*, MNAME FROM QNA_BOARD Q, MEMBER M WHERE M.MID=Q.MID AND BNO=3;

-- bHit 하나 올리기(1번글 조회수 하나 올리기)
UPDATE QNA_BOARD SET bHIT = bHIT+1 WHERE bNO=1;

-- 답변글 추가전 STEP a 수행
UPDATE QNA_BOARD SET bSTEP = bSTEP+1 WHERE bGROUP=1 AND bSTEP>0;

-- 답변글 쓰기
INSERT INTO QNA_BOARD (bNO, mID, aID, bHEAD, bCONTENT, bGROUP, bSTEP, bINDENT, bIP)
    VALUES (QNA_BOARD_SEQ.NEXTVAL, '답변자', NULL, '답변글제목', '글1첫번째답변', 1, 1, '192.168.20.1');

SELECT * FROM QNA_BOARD;
COMMIT;

